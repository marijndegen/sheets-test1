{"version":3,"file":"index.js","sources":["../esm/csv.js","../esm/xlsx.js"],"sourcesContent":["// import { Options, stringify } from \"csv-stringify/sync\";\n// import moment from \"moment\";\n// TODO figure out why bundler is not working:\n// https://csv.js.org/stringify/distributions/browser_esm/\n// This code works, but only on nodejs, not in the browser\nimport { stringify } from \"csv-stringify/browser/esm/sync\";\nexport const toCsv = (data, options) => {\n    // console.log('moment.defaultFormat(\"dddd\"):', moment.now());\n    if (!data || data.length === 0) {\n        return \"\";\n    }\n    return stringify(data, options);\n};\nexport const toCsvWithHeader = (data, columns, options) => {\n    if (!data || data.length === 0 || !columns || columns.length === 0) {\n        return \"\";\n    }\n    return stringify(data, Object.assign({ columns, header: true }, (options || {})));\n};\n// Some imports of csv-stringify\n// import { stringify } from \"csv-stringify/browser/esm/sync\";\n// import { stringify } from \"csv-stringify/sync\";\n// import { stringify } from \"../node_modules/csv-stringify/dist/esm/index\";\n// import { Options, stringify } from \"csv-stringify/dist/esm/sync\";\n//# sourceMappingURL=csv.js.map","import { utils, write } from \"xlsx\";\nexport const toXlsx = (args) => {\n    const { dataToExport, sheetName = \"Sheet1\", toExclude = [] } = args;\n    if (!dataToExport || dataToExport.length === 0) {\n        return null;\n    }\n    const filteredData = dataToExport.map((record) => {\n        const filteredRecord = {};\n        Object.keys(record).forEach((key) => {\n            if (!toExclude.includes(key)) {\n                filteredRecord[key] = record[key];\n            }\n        });\n        return filteredRecord;\n    });\n    const workbook = utils.book_new();\n    const worksheet = utils.json_to_sheet(filteredData);\n    utils.book_append_sheet(workbook, worksheet, sheetName);\n    return write(workbook, { bookType: \"xlsx\", type: \"buffer\" });\n};\nexport const toXlsxWithHeader = () => {\n    // todo implement\n};\n//# sourceMappingURL=xlsx.js.map"],"names":["stringify","utils","write"],"mappings":";;;;;;IAAA;IACA;IACA;IACA;IACA;AAEY,UAAC,KAAK,GAAG,CAAC,IAAI,EAAE,OAAO,KAAK;IACxC;IACA,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;IACpC,QAAQ,OAAO,EAAE,CAAC;IAClB,KAAK;IACL,IAAI,OAAOA,cAAS,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACpC,EAAE;AACU,UAAC,eAAe,GAAG,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,KAAK;IAC3D,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;IACxE,QAAQ,OAAO,EAAE,CAAC;IAClB,KAAK;IACL,IAAI,OAAOA,cAAS,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,OAAO,IAAI,EAAE,EAAE,CAAC,CAAC;IACtF,EAAE;IACF;IACA;IACA;IACA;IACA;;ACtBY,UAAC,MAAM,GAAG,CAAC,IAAI,KAAK;IAChC,IAAI,MAAM,EAAE,YAAY,EAAE,SAAS,GAAG,QAAQ,EAAE,SAAS,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC;IACxE,IAAI,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;IACpD,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;IACL,IAAI,MAAM,YAAY,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK;IACtD,QAAQ,MAAM,cAAc,GAAG,EAAE,CAAC;IAClC,QAAQ,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK;IAC7C,YAAY,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;IAC1C,gBAAgB,cAAc,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IAClD,aAAa;IACb,SAAS,CAAC,CAAC;IACX,QAAQ,OAAO,cAAc,CAAC;IAC9B,KAAK,CAAC,CAAC;IACP,IAAI,MAAM,QAAQ,GAAGC,UAAK,CAAC,QAAQ,EAAE,CAAC;IACtC,IAAI,MAAM,SAAS,GAAGA,UAAK,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;IACxD,IAAIA,UAAK,CAAC,iBAAiB,CAAC,QAAQ,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;IAC5D,IAAI,OAAOC,UAAK,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;IACjE,EAAE;AACU,UAAC,gBAAgB,GAAG,MAAM;IACtC;IACA;;;;;;;;;;;"}